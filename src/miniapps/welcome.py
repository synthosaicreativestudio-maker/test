"""–ú–∏–Ω–∏–∞–ø–ø: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –ø—Ä–æ—Å—Ç–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è.

–û–±—Ä–∞–±–æ—Ç—á–∏–∫ `/start` –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ:
"–£–≤–∞–∂–∞–µ–º—ã–π <–∏–º—è>, –ø—Ä–æ–π–¥–∏—Ç–µ –ø—Ä–æ—Å—Ç—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"

–§—É–Ω–∫—Ü–∏—è `format_name` –≤—ã–¥–µ–ª–µ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—É—é –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫—É –∏–º–µ–Ω–∏.
"""

def format_name(first_name: str = None, last_name: str = None, username: str = None) -> str:
    """–í–µ—Ä–Ω—É—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    parts = []
    if first_name:
        parts.append(first_name)
    if last_name:
        # –ï—Å–ª–∏ last_name —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å first_name –∏–ª–∏ –ø—É—Å—Ç, –Ω–µ –¥—É–±–ª–∏—Ä—É–µ–º
        if last_name not in parts:
            parts.append(last_name)
    if parts:
        return ' '.join(parts)
    if username:
        return username
    return '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'


def setup(dp):
    try:
        from aiogram import types
        from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
        from aiogram.filters.command import Command
    except Exception:
        return

    async def cmd_start(message: types.Message):
        u = message.from_user
        name = format_name(getattr(u, 'first_name', None), getattr(u, 'last_name', None), getattr(u, 'username', None))
        text = f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {name}! üëã\n\n–î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞."
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å Mini App –∫–Ω–æ–ø–∫–æ–π
        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(
                text="üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", 
                web_app=types.WebAppInfo(url="https://synthosaicreativestudio-maker.github.io/marketing/auth.html")
            )],
            [InlineKeyboardButton(text="‚ÑπÔ∏è –û —Å–∏—Å—Ç–µ–º–µ", callback_data="info")],
            [InlineKeyboardButton(text="üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")]
        ])
        
        await message.reply(text, reply_markup=kb)

    async def handle_info(callback: types.CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ."""
        info_text = (
            "üìã **–û —Å–∏—Å—Ç–µ–º–µ**\n\n"
            "–≠—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.\n\n"
            "**–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**\n"
            "‚Ä¢ üîê –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤\n"
            "‚Ä¢ üé´ –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫\n"
            "‚Ä¢ üìä –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏\n"
            "‚Ä¢ üì± –£–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Mini App\n\n"
            "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–π–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞."
        )
        
        await callback.message.edit_text(info_text, parse_mode="Markdown")
        await callback.answer()

    async def handle_support(callback: types.CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥–¥–µ—Ä–∂–∫–∏."""
        support_text = (
            "üìû **–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏**\n\n"
            "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –∏–ª–∏ —Ä–∞–±–æ—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã, "
            "–æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:\n\n"
            "üìß Email: support@company.com\n"
            "üì± –¢–µ–ª–µ—Ñ–æ–Ω: +7 (XXX) XXX-XX-XX\n\n"
            "–ú—ã –ø–æ–º–æ–∂–µ–º —Ä–µ—à–∏—Ç—å –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã! ü§ù"
        )
        
        await callback.message.edit_text(support_text, parse_mode="Markdown")
        await callback.answer()

    dp.message.register(cmd_start, Command(commands=['start']))
    dp.callback_query.register(handle_info, lambda c: c.data == "info")
    dp.callback_query.register(handle_support, lambda c: c.data == "support")
